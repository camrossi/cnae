- set_fact:
    aci_login: &aci_login
      hostname: "{{ inventory_hostname }}"
      username: "{{ aci_temp_username }}"
      private_key: "{{ './roles/aci/files/'+ aci_temp_username + '-user.key' }}"
      certificate_name: "{{ aci_temp_username }}"
      use_proxy: "no"
      validate_certs: "{{ validate_certs }}"
      port: "{{ port }}"
  when: "'apic' in group_names"

- name: DC Ops - Delete old offline data sets
  shell: rm -rf ./roles/demos/files/datasets/DcOps*.tar.gz
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

#The logic here is simplified. I wait for 1 Fault (imdata[0]) and I expect that fault to be the duplicate IP. This only works 
#for this specific APIC config 
- name: DC Ops - Wait for DUP IP Fault to be Present, if it fails check why the nae-vdi-10 VM is not generating a duplicate IP
  cisco.aci.aci_rest:
    <<: *aci_login
    method: get
    path: "/api/node/mo/uni/tn-nae-non-prod/ap-internal-vdi-ap/epg-internal-vdi-desktops-epg.json?query-target=self&rsp-subtree-include=faults,no-scoped,subtree"
  register: fault
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names" 
  until: "fault.imdata[0] is defined and 'F3083' in fault.imdata[0].faultInst.attributes.code and 'soaking' is match fault.imdata[0].faultInst.attributes.lc"
  retries: 20
  delay: 5

- name: DC Ops - Collect Duplicate IP Epoch
  script: roles/demos/files/cnae_data_collection.py -versionProperties roles/demos/files/version.properties -cnaeMode APIC -clusterName DcOpsDupIP -user "{{ admin_user }}" -password "{{ admin_pass }}" -targetDir roles/demos/files/datasets -apicConfigExportPolicyName "NAE_Export"  -iterations 1 -APIC "{{ inventory_hostname }}" 
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- name: DC Ops - PowerOf VMs with Duplicate IP
  shell: govc vm.power -off nae-vdi-{{ item }}
  with_sequence: start=10 end=15
  ignore_errors: yes
  async: 10
  poll: 0
  environment:
    GOVC_URL: "{{ govc_url }}"
    GOVC_INSECURE: "true"
    GOVC_DATASTORE: "{{ data_store }}"
  tags:
    - dcops
    - alldemos
  when: "'vcenter' in group_names"

- name: DC Ops - Flap the BD to clear the IPs l2_unknown_unicast --> flood
  cisco.aci.aci_bd:
    <<: *aci_login
    tenant: nae-non-prod
    bd: non-prod-internal-vdi-bd
    vrf: non-prod-vrf
    l2_unknown_unicast: flood
    state: present
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- pause:     
    seconds: 15
    prompt: "Waiting 15 sec to ensure all the IPs are flushed"
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- name: DC Ops - Restore BD l2_unknown_unicast --> Proxy
  cisco.aci.aci_bd:
    <<: *aci_login
    tenant: nae-non-prod
    bd: non-prod-internal-vdi-bd
    vrf: non-prod-vrf
    state: present
    l2_unknown_unicast: proxy
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- pause:     
    seconds: 15
    prompt: "Waiting 15 sec to ensure all the IPs are re-learned"
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- name: DC Ops - Collect No Duplicate IP Epoch
  script: roles/demos/files/cnae_data_collection.py -versionProperties roles/demos/files/version.properties -cnaeMode APIC -clusterName DcOpsNoDupIP -user "{{ admin_user }}" -password "{{ admin_pass }}" -targetDir roles/demos/files/datasets -apicConfigExportPolicyName "NAE_Export"  -iterations 1 -APIC "{{ inventory_hostname }}" 
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- name: DC Ops - Break VDI DMZ Contract
  cisco.aci.aci_contract_subject_to_filter:
    <<: *aci_login
    tenant: nae-dmz
    contract: D-E-VDI-contract
    subject: D-E-VDI-subject
    filter: RDP
    state: absent
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- name: DC Ops - Collect DMZ Congtract missing filter
  script: roles/demos/files/cnae_data_collection.py -versionProperties roles/demos/files/version.properties -cnaeMode APIC -clusterName DcOpsNoFilter -user "{{ admin_user }}" -password "{{ admin_pass }}" -targetDir roles/demos/files/datasets -apicConfigExportPolicyName "NAE_Export"  -iterations 1 -APIC "{{ inventory_hostname }}" 
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- name: DC Ops - DC Ops Revert VDI DMZ Contract 
  cisco.aci.aci_contract_subject_to_filter:
    <<: *aci_login
    tenant: nae-dmz
    contract: D-E-VDI-contract
    subject: D-E-VDI-subject
    filter: RDP
    state: present
  tags:
    - dcops
    - alldemos
  when: "'apic' in group_names"

- name: DC Ops - Power On VM with Duplicate IP 
  shell: govc vm.power -on nae-vdi-{{ item }}
  with_sequence: start=10 end=15
  ignore_errors: yes
  async: 10
  poll: 0
  environment:
    GOVC_URL: "{{ govc_url }}"
    GOVC_INSECURE: "true"
    GOVC_DATASTORE: "{{ data_store }}"  
  tags:
    - dcops
    - alldemos
  when: "'vcenter' in group_names"